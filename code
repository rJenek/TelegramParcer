    import requests
    from bs4 import BeautifulSoup


    def get_html(url):
        r = requests.get(url)
        r.encoding = 'utf8'
        return r.text

    def get_link(html):
        soup = BeautifulSoup(html, 'lxml')
        head = soup.find('div', id='section-content').find_all('a', class_="entry-header")
        for i in head:
            link = 'https://3dnews.ru' + i.get('href')
            heads= i.find('h1').string
            data = {'head': heads,
                     'link': link}
            print(data)


    data = get_link(get_html('https://3dnews.ru/news'))
from telegram import PhotoSize, TelegramObject


class UserProfilePhotos(TelegramObject):
    """This object represent a user's profile pictures.
    Attributes:
        total_count (:obj:`int`): Total number of profile pictures.
        photos (List[List[:class:`telegram.PhotoSize`]]): Requested profile pictures.
    Args:
        total_count (:obj:`int`): Total number of profile pictures the target user has.
        photos (List[List[:class:`telegram.PhotoSize`]]): Requested profile pictures (in up to 4
            sizes each).
    """

def __init__(self, total_count, photos, **kwargs):
    # Required
    self.total_count = int(total_count)
    self.photos = photos

@classmethod
def de_json(cls, data, bot):
    if not data:
        return None

    data = super(UserProfilePhotos, cls).de_json(data, bot)

    data['photos'] = [PhotoSize.de_list(photo, bot) for photo in data['photos']]

    return cls(**data)

def to_dict(self):
    data = super(UserProfilePhotos, self).to_dict()

    data['photos'] = []
    for photo in self.photos:
        data['photos'].append([x.to_dict() for x in photo])

    return data
